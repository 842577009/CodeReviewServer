{"version":3,"file":"hotkeys.esm-d20e5801.js","sources":["../../node_modules/.pnpm/hotkeys-js@3.10.1/node_modules/hotkeys-js/dist/hotkeys.esm.js"],"sourcesContent":["/**! \n * hotkeys-js v3.10.1 \n * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies. \n * \n * Copyright (c) 2022 kenny wong <wowohoo@qq.com> \n * http://jaywcjlove.github.io/hotkeys \n * Licensed under the MIT license \n */\n\nvar isff = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase().indexOf('firefox') > 0 : false; // 绑定事件\n\nfunction addEvent(object, event, method, useCapture) {\n  if (object.addEventListener) {\n    object.addEventListener(event, method, useCapture);\n  } else if (object.attachEvent) {\n    object.attachEvent(\"on\".concat(event), function () {\n      method(window.event);\n    });\n  }\n} // 修饰键转换成对应的键码\n\n\nfunction getMods(modifier, key) {\n  var mods = key.slice(0, key.length - 1);\n\n  for (var i = 0; i < mods.length; i++) {\n    mods[i] = modifier[mods[i].toLowerCase()];\n  }\n\n  return mods;\n} // 处理传的key字符串转换成数组\n\n\nfunction getKeys(key) {\n  if (typeof key !== 'string') key = '';\n  key = key.replace(/\\s/g, ''); // 匹配任何空白字符,包括空格、制表符、换页符等等\n\n  var keys = key.split(','); // 同时设置多个快捷键，以','分割\n\n  var index = keys.lastIndexOf(''); // 快捷键可能包含','，需特殊处理\n\n  for (; index >= 0;) {\n    keys[index - 1] += ',';\n    keys.splice(index, 1);\n    index = keys.lastIndexOf('');\n  }\n\n  return keys;\n} // 比较修饰键的数组\n\n\nfunction compareArray(a1, a2) {\n  var arr1 = a1.length >= a2.length ? a1 : a2;\n  var arr2 = a1.length >= a2.length ? a2 : a1;\n  var isIndex = true;\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr2.indexOf(arr1[i]) === -1) isIndex = false;\n  }\n\n  return isIndex;\n}\n\nvar _keyMap = {\n  backspace: 8,\n  '⌫': 8,\n  tab: 9,\n  clear: 12,\n  enter: 13,\n  '↩': 13,\n  return: 13,\n  esc: 27,\n  escape: 27,\n  space: 32,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  del: 46,\n  delete: 46,\n  ins: 45,\n  insert: 45,\n  home: 36,\n  end: 35,\n  pageup: 33,\n  pagedown: 34,\n  capslock: 20,\n  num_0: 96,\n  num_1: 97,\n  num_2: 98,\n  num_3: 99,\n  num_4: 100,\n  num_5: 101,\n  num_6: 102,\n  num_7: 103,\n  num_8: 104,\n  num_9: 105,\n  num_multiply: 106,\n  num_add: 107,\n  num_enter: 108,\n  num_subtract: 109,\n  num_decimal: 110,\n  num_divide: 111,\n  '⇪': 20,\n  ',': 188,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '-': isff ? 173 : 189,\n  '=': isff ? 61 : 187,\n  ';': isff ? 59 : 186,\n  '\\'': 222,\n  '[': 219,\n  ']': 221,\n  '\\\\': 220\n}; // Modifier Keys\n\nvar _modifier = {\n  // shiftKey\n  '⇧': 16,\n  shift: 16,\n  // altKey\n  '⌥': 18,\n  alt: 18,\n  option: 18,\n  // ctrlKey\n  '⌃': 17,\n  ctrl: 17,\n  control: 17,\n  // metaKey\n  '⌘': 91,\n  cmd: 91,\n  command: 91\n};\nvar modifierMap = {\n  16: 'shiftKey',\n  18: 'altKey',\n  17: 'ctrlKey',\n  91: 'metaKey',\n  shiftKey: 16,\n  ctrlKey: 17,\n  altKey: 18,\n  metaKey: 91\n};\nvar _mods = {\n  16: false,\n  18: false,\n  17: false,\n  91: false\n};\nvar _handlers = {}; // F1~F12 special key\n\nfor (var k = 1; k < 20; k++) {\n  _keyMap[\"f\".concat(k)] = 111 + k;\n}\n\nvar _downKeys = []; // 记录摁下的绑定键\n\nvar winListendFocus = false; // window是否已经监听了focus事件\n\nvar _scope = 'all'; // 默认热键范围\n\nvar elementHasBindEvent = []; // 已绑定事件的节点记录\n// 返回键码\n\nvar code = function code(x) {\n  return _keyMap[x.toLowerCase()] || _modifier[x.toLowerCase()] || x.toUpperCase().charCodeAt(0);\n};\n\nvar getKey = function getKey(x) {\n  return Object.keys(_keyMap).find(function (k) {\n    return _keyMap[k] === x;\n  });\n};\n\nvar getModifier = function getModifier(x) {\n  return Object.keys(_modifier).find(function (k) {\n    return _modifier[k] === x;\n  });\n}; // 设置获取当前范围（默认为'所有'）\n\n\nfunction setScope(scope) {\n  _scope = scope || 'all';\n} // 获取当前范围\n\n\nfunction getScope() {\n  return _scope || 'all';\n} // 获取摁下绑定键的键值\n\n\nfunction getPressedKeyCodes() {\n  return _downKeys.slice(0);\n}\n\nfunction getPressedKeyString() {\n  return _downKeys.map(function (c) {\n    return getKey(c) || getModifier(c) || String.fromCharCode(c);\n  });\n} // 表单控件控件判断 返回 Boolean\n// hotkey is effective only when filter return true\n\n\nfunction filter(event) {\n  var target = event.target || event.srcElement;\n  var tagName = target.tagName;\n  var flag = true; // ignore: isContentEditable === 'true', <input> and <textarea> when readOnly state is false, <select>\n\n  if (target.isContentEditable || (tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT') && !target.readOnly) {\n    flag = false;\n  }\n\n  return flag;\n} // 判断摁下的键是否为某个键，返回true或者false\n\n\nfunction isPressed(keyCode) {\n  if (typeof keyCode === 'string') {\n    keyCode = code(keyCode); // 转换成键码\n  }\n\n  return _downKeys.indexOf(keyCode) !== -1;\n} // 循环删除handlers中的所有 scope(范围)\n\n\nfunction deleteScope(scope, newScope) {\n  var handlers;\n  var i; // 没有指定scope，获取scope\n\n  if (!scope) scope = getScope();\n\n  for (var key in _handlers) {\n    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {\n      handlers = _handlers[key];\n\n      for (i = 0; i < handlers.length;) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);else i++;\n      }\n    }\n  } // 如果scope被删除，将scope重置为all\n\n\n  if (getScope() === scope) setScope(newScope || 'all');\n} // 清除修饰键\n\n\nfunction clearModifier(event) {\n  var key = event.keyCode || event.which || event.charCode;\n\n  var i = _downKeys.indexOf(key); // 从列表中清除按压过的键\n\n\n  if (i >= 0) {\n    _downKeys.splice(i, 1);\n  } // 特殊处理 cmmand 键，在 cmmand 组合快捷键 keyup 只执行一次的问题\n\n\n  if (event.key && event.key.toLowerCase() === 'meta') {\n    _downKeys.splice(0, _downKeys.length);\n  } // 修饰键 shiftKey altKey ctrlKey (command||metaKey) 清除\n\n\n  if (key === 93 || key === 224) key = 91;\n\n  if (key in _mods) {\n    _mods[key] = false; // 将修饰键重置为false\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = false;\n    }\n  }\n}\n\nfunction unbind(keysInfo) {\n  // unbind(), unbind all keys\n  if (typeof keysInfo === 'undefined') {\n    Object.keys(_handlers).forEach(function (key) {\n      return delete _handlers[key];\n    });\n  } else if (Array.isArray(keysInfo)) {\n    // support like : unbind([{key: 'ctrl+a', scope: 's1'}, {key: 'ctrl-a', scope: 's2', splitKey: '-'}])\n    keysInfo.forEach(function (info) {\n      if (info.key) eachUnbind(info);\n    });\n  } else if (typeof keysInfo === 'object') {\n    // support like unbind({key: 'ctrl+a, ctrl+b', scope:'abc'})\n    if (keysInfo.key) eachUnbind(keysInfo);\n  } else if (typeof keysInfo === 'string') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // support old method\n    // eslint-disable-line\n    var scope = args[0],\n        method = args[1];\n\n    if (typeof scope === 'function') {\n      method = scope;\n      scope = '';\n    }\n\n    eachUnbind({\n      key: keysInfo,\n      scope: scope,\n      method: method,\n      splitKey: '+'\n    });\n  }\n} // 解除绑定某个范围的快捷键\n\n\nvar eachUnbind = function eachUnbind(_ref) {\n  var key = _ref.key,\n      scope = _ref.scope,\n      method = _ref.method,\n      _ref$splitKey = _ref.splitKey,\n      splitKey = _ref$splitKey === void 0 ? '+' : _ref$splitKey;\n  var multipleKeys = getKeys(key);\n  multipleKeys.forEach(function (originKey) {\n    var unbindKeys = originKey.split(splitKey);\n    var len = unbindKeys.length;\n    var lastKey = unbindKeys[len - 1];\n    var keyCode = lastKey === '*' ? '*' : code(lastKey);\n    if (!_handlers[keyCode]) return; // 判断是否传入范围，没有就获取范围\n\n    if (!scope) scope = getScope();\n    var mods = len > 1 ? getMods(_modifier, unbindKeys) : [];\n    _handlers[keyCode] = _handlers[keyCode].filter(function (record) {\n      // 通过函数判断，是否解除绑定，函数相等直接返回\n      var isMatchingMethod = method ? record.method === method : true;\n      return !(isMatchingMethod && record.scope === scope && compareArray(record.mods, mods));\n    });\n  });\n}; // 对监听对应快捷键的回调函数进行处理\n\n\nfunction eventHandler(event, handler, scope, element) {\n  if (handler.element !== element) {\n    return;\n  }\n\n  var modifiersMatch; // 看它是否在当前范围\n\n  if (handler.scope === scope || handler.scope === 'all') {\n    // 检查是否匹配修饰符（如果有返回true）\n    modifiersMatch = handler.mods.length > 0;\n\n    for (var y in _mods) {\n      if (Object.prototype.hasOwnProperty.call(_mods, y)) {\n        if (!_mods[y] && handler.mods.indexOf(+y) > -1 || _mods[y] && handler.mods.indexOf(+y) === -1) {\n          modifiersMatch = false;\n        }\n      }\n    } // 调用处理程序，如果是修饰键不做处理\n\n\n    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === '*') {\n      if (handler.method(event, handler) === false) {\n        if (event.preventDefault) event.preventDefault();else event.returnValue = false;\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.cancelBubble) event.cancelBubble = true;\n      }\n    }\n  }\n} // 处理keydown事件\n\n\nfunction dispatch(event, element) {\n  var asterisk = _handlers['*'];\n  var key = event.keyCode || event.which || event.charCode; // 表单控件过滤 默认表单控件不触发快捷键\n\n  if (!hotkeys.filter.call(this, event)) return; // Gecko(Firefox)的command键值224，在Webkit(Chrome)中保持一致\n  // Webkit左右 command 键值不一样\n\n  if (key === 93 || key === 224) key = 91;\n  /**\n   * Collect bound keys\n   * If an Input Method Editor is processing key input and the event is keydown, return 229.\n   * https://stackoverflow.com/questions/25043934/is-it-ok-to-ignore-keydown-events-with-keycode-229\n   * http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n   */\n\n  if (_downKeys.indexOf(key) === -1 && key !== 229) _downKeys.push(key);\n  /**\n   * Jest test cases are required.\n   * ===============================\n   */\n\n  ['ctrlKey', 'altKey', 'shiftKey', 'metaKey'].forEach(function (keyName) {\n    var keyNum = modifierMap[keyName];\n\n    if (event[keyName] && _downKeys.indexOf(keyNum) === -1) {\n      _downKeys.push(keyNum);\n    } else if (!event[keyName] && _downKeys.indexOf(keyNum) > -1) {\n      _downKeys.splice(_downKeys.indexOf(keyNum), 1);\n    } else if (keyName === 'metaKey' && event[keyName] && _downKeys.length === 3) {\n      /**\n       * Fix if Command is pressed:\n       * ===============================\n       */\n      if (!(event.ctrlKey || event.shiftKey || event.altKey)) {\n        _downKeys = _downKeys.slice(_downKeys.indexOf(keyNum));\n      }\n    }\n  });\n  /**\n   * -------------------------------\n   */\n\n  if (key in _mods) {\n    _mods[key] = true; // 将特殊字符的key注册到 hotkeys 上\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = true;\n    }\n\n    if (!asterisk) return;\n  } // 将 modifierMap 里面的修饰键绑定到 event 中\n\n\n  for (var e in _mods) {\n    if (Object.prototype.hasOwnProperty.call(_mods, e)) {\n      _mods[e] = event[modifierMap[e]];\n    }\n  }\n  /**\n   * https://github.com/jaywcjlove/hotkeys/pull/129\n   * This solves the issue in Firefox on Windows where hotkeys corresponding to special characters would not trigger.\n   * An example of this is ctrl+alt+m on a Swedish keyboard which is used to type μ.\n   * Browser support: https://caniuse.com/#feat=keyboardevent-getmodifierstate\n   */\n\n\n  if (event.getModifierState && !(event.altKey && !event.ctrlKey) && event.getModifierState('AltGraph')) {\n    if (_downKeys.indexOf(17) === -1) {\n      _downKeys.push(17);\n    }\n\n    if (_downKeys.indexOf(18) === -1) {\n      _downKeys.push(18);\n    }\n\n    _mods[17] = true;\n    _mods[18] = true;\n  } // 获取范围 默认为 `all`\n\n\n  var scope = getScope(); // 对任何快捷键都需要做的处理\n\n  if (asterisk) {\n    for (var i = 0; i < asterisk.length; i++) {\n      if (asterisk[i].scope === scope && (event.type === 'keydown' && asterisk[i].keydown || event.type === 'keyup' && asterisk[i].keyup)) {\n        eventHandler(event, asterisk[i], scope, element);\n      }\n    }\n  } // key 不在 _handlers 中返回\n\n\n  if (!(key in _handlers)) return;\n\n  for (var _i = 0; _i < _handlers[key].length; _i++) {\n    if (event.type === 'keydown' && _handlers[key][_i].keydown || event.type === 'keyup' && _handlers[key][_i].keyup) {\n      if (_handlers[key][_i].key) {\n        var record = _handlers[key][_i];\n        var splitKey = record.splitKey;\n        var keyShortcut = record.key.split(splitKey);\n        var _downKeysCurrent = []; // 记录当前按键键值\n\n        for (var a = 0; a < keyShortcut.length; a++) {\n          _downKeysCurrent.push(code(keyShortcut[a]));\n        }\n\n        if (_downKeysCurrent.sort().join('') === _downKeys.sort().join('')) {\n          // 找到处理内容\n          eventHandler(event, record, scope, element);\n        }\n      }\n    }\n  }\n} // 判断 element 是否已经绑定事件\n\n\nfunction isElementBind(element) {\n  return elementHasBindEvent.indexOf(element) > -1;\n}\n\nfunction hotkeys(key, option, method) {\n  _downKeys = [];\n  var keys = getKeys(key); // 需要处理的快捷键列表\n\n  var mods = [];\n  var scope = 'all'; // scope默认为all，所有范围都有效\n\n  var element = document; // 快捷键事件绑定节点\n\n  var i = 0;\n  var keyup = false;\n  var keydown = true;\n  var splitKey = '+';\n  var capture = false; // 对为设定范围的判断\n\n  if (method === undefined && typeof option === 'function') {\n    method = option;\n  }\n\n  if (Object.prototype.toString.call(option) === '[object Object]') {\n    if (option.scope) scope = option.scope; // eslint-disable-line\n\n    if (option.element) element = option.element; // eslint-disable-line\n\n    if (option.keyup) keyup = option.keyup; // eslint-disable-line\n\n    if (option.keydown !== undefined) keydown = option.keydown; // eslint-disable-line\n\n    if (option.capture !== undefined) capture = option.capture; // eslint-disable-line\n\n    if (typeof option.splitKey === 'string') splitKey = option.splitKey; // eslint-disable-line\n  }\n\n  if (typeof option === 'string') scope = option; // 对于每个快捷键进行处理\n\n  for (; i < keys.length; i++) {\n    key = keys[i].split(splitKey); // 按键列表\n\n    mods = []; // 如果是组合快捷键取得组合快捷键\n\n    if (key.length > 1) mods = getMods(_modifier, key); // 将非修饰键转化为键码\n\n    key = key[key.length - 1];\n    key = key === '*' ? '*' : code(key); // *表示匹配所有快捷键\n    // 判断key是否在_handlers中，不在就赋一个空数组\n\n    if (!(key in _handlers)) _handlers[key] = [];\n\n    _handlers[key].push({\n      keyup: keyup,\n      keydown: keydown,\n      scope: scope,\n      mods: mods,\n      shortcut: keys[i],\n      method: method,\n      key: keys[i],\n      splitKey: splitKey,\n      element: element\n    });\n  } // 在全局document上设置快捷键\n\n\n  if (typeof element !== 'undefined' && !isElementBind(element) && window) {\n    elementHasBindEvent.push(element);\n    addEvent(element, 'keydown', function (e) {\n      dispatch(e, element);\n    }, capture);\n\n    if (!winListendFocus) {\n      winListendFocus = true;\n      addEvent(window, 'focus', function () {\n        _downKeys = [];\n      }, capture);\n    }\n\n    addEvent(element, 'keyup', function (e) {\n      dispatch(e, element);\n      clearModifier(e);\n    }, capture);\n  }\n}\n\nfunction trigger(shortcut) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n  Object.keys(_handlers).forEach(function (key) {\n    var dataList = _handlers[key].filter(function (item) {\n      return item.scope === scope && item.shortcut === shortcut;\n    });\n\n    dataList.forEach(function (data) {\n      if (data && data.method) {\n        data.method();\n      }\n    });\n  });\n}\n\nvar _api = {\n  getPressedKeyString: getPressedKeyString,\n  setScope: setScope,\n  getScope: getScope,\n  deleteScope: deleteScope,\n  getPressedKeyCodes: getPressedKeyCodes,\n  isPressed: isPressed,\n  filter: filter,\n  trigger: trigger,\n  unbind: unbind,\n  keyMap: _keyMap,\n  modifier: _modifier,\n  modifierMap: modifierMap\n};\n\nfor (var a in _api) {\n  if (Object.prototype.hasOwnProperty.call(_api, a)) {\n    hotkeys[a] = _api[a];\n  }\n}\n\nif (typeof window !== 'undefined') {\n  var _hotkeys = window.hotkeys;\n\n  hotkeys.noConflict = function (deep) {\n    if (deep && window.hotkeys === hotkeys) {\n      window.hotkeys = _hotkeys;\n    }\n\n    return hotkeys;\n  };\n\n  window.hotkeys = hotkeys;\n}\n\nexport { hotkeys as default };\n"],"names":["isff","addEvent","object","event","method","useCapture","getMods","modifier","key","mods","i","getKeys","keys","index","compareArray","a1","a2","arr1","arr2","isIndex","_keyMap","_modifier","modifierMap","_mods","_handlers","k","_downKeys","winListendFocus","_scope","elementHasBindEvent","code","x","getKey","getModifier","setScope","scope","getScope","getPressedKeyCodes","getPressedKeyString","c","filter","target","tagName","flag","isPressed","keyCode","deleteScope","newScope","handlers","clearModifier","hotkeys","unbind","keysInfo","info","eachUnbind","_len","args","_key","_ref","_ref$splitKey","splitKey","multipleKeys","originKey","unbindKeys","len","lastKey","record","isMatchingMethod","eventHandler","handler","element","modifiersMatch","y","dispatch","asterisk","keyName","keyNum","e","_i","keyShortcut","_downKeysCurrent","a","isElementBind","option","keyup","keydown","capture","trigger","shortcut","dataList","item","data","_api","_hotkeys","deep"],"mappings":"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"}